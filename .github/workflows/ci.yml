name: CI Pipeline

on:
  push:
    branches:
      - main
      - test-ci
  pull_request:
    branches:
      - main
      - test-ci

jobs:
  test_backend:
    name: Test Backend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Run tests with Docker Compose
        run: |
          docker-compose -f docker-compose.test.yml up --build --abort-on-container-exit

      - name: Tear down Docker Compose
        if: always()
        run: |
          docker-compose -f docker-compose.test.yml down

      - name: Upload Coverage Report
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: backend/coverage.xml

  test_frontend:
    name: Test Frontend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Clear cache
        run: |
          rm -rf ~/.npm

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.14.0'

      - name: Install dependencies
        working-directory: frontend
        run: |
          npm install --verbose

      - name: Run Frontend Tests
        working-directory: frontend
        run: |
          npm test